version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: videomixpro_db
    environment:
      POSTGRES_USER: videomixpro
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: videomixpro
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U videomixpro"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: videomixpro_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build: .
    container_name: videomixpro_api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://videomixpro:password123@postgres:5432/videomixpro
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      UPLOAD_PATH: /app/uploads
      OUTPUT_DIR: /app/outputs
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build: .
    container_name: videomixpro_worker
    command: npm run queue:dev
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://videomixpro:password123@postgres:5432/videomixpro
      REDIS_URL: redis://redis:6379
      UPLOAD_PATH: /app/uploads
      OUTPUT_DIR: /app/outputs
    volumes:
      - ./uploads:/app/uploads
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: